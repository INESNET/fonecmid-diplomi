
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	СформироватьДвиженияУдержания();
	
	РассчитатьПервичныеНачисления();
	
	РассчитатьУдержания();
	
	РассчитатьОтпуск();
	
	СформироватьДвиженияВзаиморасчетыСКлиентами();
	
КонецПроцедуры

Процедура СформироватьДвижения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка,
		|	ВКМ_НачисленияЗарплатыНачисления.НомерСтроки,
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы,
		|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания,
		|	ВКМ_НачисленияЗарплатыНачисления.Подразделение,
		|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СпособРасчета = Перечисления.ВКМ_СпособРасчета.Отпуск Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ДатаНачала, -1));
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Подразделение = Выборка.Подразделение;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
		КонецЕсли;
		
		Если Выборка.СпособРасчета = Перечисления.ВКМ_СпособРасчета.Оклад Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Подразделение = Выборка.Подразделение;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.ГрафикРаботы = Выборка.ГрафикРаботы;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры
	
Процедура СформироватьДвиженияУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыУдержания.Сотрудник КАК Сотрудник,
		|	ВКМ_НачисленияЗарплатыУдержания.Подразделение КАК Подразделение,
		|	ВКМ_НачисленияЗарплатыУдержания.ВидРасчета КАК ВидРасчета
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Удержания КАК ВКМ_НачисленияЗарплатыУдержания
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыУдержания.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
			Движение = Движения.ВКМ_Удержания.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Подразделение = Выборка.Подразделение;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	
	КонецЦикла;

    Движения.ВКМ_Удержания.Записать();
    
КонецПроцедуры

Процедура РассчитатьПервичныеНачисления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботы.СуммаКОплате, 0) КАК СуммаКОплате,
	|	ВКМ_УсловияОплатыСотрудников.Оклад,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия,
	|	ВКМ_ВыполненныеСотрудникомРаботы.Период,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействия
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|	И ВидРасчета.СпособРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы КАК ВКМ_ВыполненныеСотрудникомРаботы
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудников.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.УстановитьПараметр("Оклад", Перечисления.ВКМ_СпособРасчета.Оклад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если МЕСЯЦ(Выборка.Период) = МЕСЯЦ(Выборка.ПериодДействия) Тогда
			Движение.Результат = Выборка.Оклад + Выборка.СуммаКОплате;
			Движение.РабочихДней = Выборка.РабочихДнейПериодДействия;
		Иначе
			Движение.Результат = Выборка.Оклад;
			Движение.РабочихДней = Выборка.РабочихДнейПериодДействия;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
	|	ВКМ_ОсновныеНачисления.Результат
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,, Регистратор = &Ссылка) КАК
	|		ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.Сотрудник = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Подразделение");
	Измерения.Добавить("Сотрудник");
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.Результат * 0.13;
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия, 0) КАК
		|		РабочихДнейФактическийПериодДействия,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РабочихДнейБаза, 0) КАК РабочихДнейБаза
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета.СпособРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|		И ВидРасчета.СпособРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета.СпособРасчета = &Отпуск";
		
	Измерения = Новый Массив;
	Измерения.Добавить("Подразделение");
	Измерения.Добавить("Сотрудник");
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", Перечисления.ВКМ_СпособРасчета.Отпуск);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДвижениеОсновныеНачисления = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.РабочихДнейБаза = 0 Тогда
			ДвижениеОсновныеНачисления.Результат = 0;
		Иначе
			ДвижениеОсновныеНачисления.РабочихДней = Выборка.РабочихДнейФактическийПериодДействия;
			ДвижениеОсновныеНачисления.Результат = Выборка.РезультатБаза * Выборка.РабочихДнейФактическийПериодДействия / Выборка.РабочихДнейБаза;
		КонецЕсли;	
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры
		
Процедура СформироватьДвиженияВзаиморасчетыСКлиентами()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник,
		|	ВКМ_ОсновныеНачисления.Подразделение,
		|	ВКМ_ОсновныеНачисления.Результат,
		|	ВКМ_ОсновныеНачисления.ПериодДействия
		|ПОМЕСТИТЬ ВТ_ОснНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник,
		|	ВКМ_Удержания.Подразделение,
		|	ВКМ_Удержания.Результат КАК РезультатУдерж
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ОснНачисления.Сотрудник, ВТ_Удержания.Сотрудник) КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_ОснНачисления.Подразделение, ВТ_Удержания.Подразделение) КАК Подразделение,
		|	ЕСТЬNULL(ВТ_ОснНачисления.Результат, 0) - ЕСТЬNULL(ВТ_Удержания.РезультатУдерж, 0) КАК Результат,
		|	ВТ_ОснНачисления.ПериодДействия
		|ИЗ
		|	ВТ_ОснНачисления КАК ВТ_ОснНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
		|		ПО ВТ_ОснНачисления.Сотрудник = ВТ_Удержания.Сотрудник";
		
	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	 Если Формат(Выборка.ПериодДействия, "ДФ=MM.yyyy") = Формат(Дата, "ДФ=MM.yyyy")  Тогда
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Подразделение = Выборка.Подразделение;
		Движение.Сумма = Выборка.Результат;
	 КонецЕсли;	
	КонецЦикла;
	
    Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
    
КонецПроцедуры

