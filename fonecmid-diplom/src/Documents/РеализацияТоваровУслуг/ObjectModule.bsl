
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
Процедура ВыполнитьАвтозаполнение() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_НоменклатураАбонентскаяПлата.Значение КАК НоменклатураАбонентскаяПлата,
			|	ВКМ_НоменклатураРаботыСпециалиста.Значение КАК НоменклатураРаботыСпециалиста,
			|	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК СуммаАбонентскойПлаты,
			|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
			|	ВКМ_ВыполненныеКлиентуРаботы.Договор,
			|	ВКМ_ВыполненныеКлиентуРаботы.КоличествоЧасов,
			|	ВКМ_ВыполненныеКлиентуРаботы.СуммаКОплате,
			|	РеализацияТоваровУслуг.Дата,
			|	РеализацияТоваровУслуг.Ссылка КАК СсылкаНаДокумент,
			|	ВКМ_ВыполненныеКлиентуРаботы.Активность,
			|	ВКМ_ВыполненныеКлиентуРаботы.Период,
			|	РеализацияТоваровУслуг.Договор КАК ДоговорВДокументе
			|ИЗ
			|	Константа.ВКМ_НоменклатураАбонентскаяПлата КАК ВКМ_НоменклатураАбонентскаяПлата,
			|	Константа.ВКМ_НоменклатураРаботыСпециалиста КАК ВКМ_НоменклатураРаботыСпециалиста,
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг,
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов,
			|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы КАК ВКМ_ВыполненныеКлиентуРаботы
			|ГДЕ
			|	ДоговорыКонтрагентов.Ссылка = &Ссылка
			|	И РеализацияТоваровУслуг.Ссылка = &СсылкаДокумента";
			
	Запрос.УстановитьПараметр("Ссылка", Договор);
	Запрос.УстановитьПараметр("СсылкаДокумента", Ссылка);
			
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаЗначений = РезультатЗапроса.Выгрузить();
	Услуги.Очистить();
	Услуги.Загрузить(ТаблицаЗначений);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.НоменклатураАбонентскаяПлата) И Выборка.СуммаАбонентскойПлаты <> 0  Тогда
			
			Строка = Услуги.Добавить();
			Строка.Номенклатура = Выборка.НоменклатураАбонентскаяПлата;
			Строка.Цена = Выборка.СуммаАбонентскойПлаты;
		
		Иначе
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнено"; 
			Сообщение.Сообщить(); 
			
		КонецЕсли;
		
		Если Месяц(Выборка.Дата) = Месяц(Выборка.Период) И Выборка.Активность = Истина И Выборка.ДоговорВДокументе = Выборка.Договор Тогда
				
			Строка = Услуги.Добавить();
			Строка.Номенклатура = Выборка.НоменклатураРаботыСпециалиста;
			Строка.Количество = Выборка.КоличествоЧасов;
			Строка.Сумма = Выборка.СуммаКОплате;
		
		КонецЕсли;
		
	КонецЦикла;		
			
КонецПроцедуры

#КонецЕсли
